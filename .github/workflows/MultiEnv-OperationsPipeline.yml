name: "OperationsPipeline"

on:
 workflow_dispatch:
    inputs:
      environment:
        description: "Select the Environment"
        required: true
        type: choice
        options:
          - SCF-DEV
          - SCF-PROD
      category:
        type: choice
        description: "Select the Initiative"
        required: false
        options:  
          - Ops-Alerting-Audit
          - Ops-Cost-Management-Audit
          - Ops-Cost-Management-Enable
          - Ops-Logging-Audit
          - Ops-Logging-Enable
          - Ops-Management
          - Ops-Monitoring-Audit
          - Ops-Monitoring-Enable
          - Ops-Threat-Protection-Audit
          - Ops-Threat-Protection-Enable
      apply:
        description: "Apply"
        required: true
        type: boolean

jobs:
  scf-dev-terraform-plan:
    name: 'scf-dev-terraform-plan'
    if: ${{ github.event.inputs.environment == 'SCF-DEV' }}
    environment:
      name: SCF-Dev-Plan
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Initiatives/Operations/${{ github.event.inputs.category }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=rg-poc-dev-01" -backend-config="storage_account_name=sttfiacpocdeveu201" -backend-config="container_name=poccontainer" -backend-config="key=${{ github.event.inputs.category }}.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tf_plan
          echo "TF_PLAN_FILE=tf_plan" >> $GITHUB_ENV  # Set the TF_PLAN_FILE environment variable

  scf-dev-terraform-apply:
    name: 'scf-dev-terraform-apply'
    needs: scf-dev-terraform-plan
    if: success('scf-dev-terraform-plan') && github.event.inputs.apply == 'true' && github.event.inputs.environment == 'SCF-DEV'
    environment:
      name: SCF-Dev-Apply
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Initiatives/Operations/${{ github.event.inputs.category }}
        

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=rg-poc-dev-01" -backend-config="storage_account_name=sttfiacpocdeveu201" -backend-config="container_name=poccontainer" -backend-config="key=${{ github.event.inputs.category }}.tfstate"

      - name: Terraform Apply
        run: terraform apply ${{ env.TF_PLAN_FILE }} --auto-approve

  scf-prod-terraform-plan:
    name: 'scf-prod-terraform-plan'
    needs: scf-dev-terraform-apply
    if: success('scf-dev-terraform-apply') || github.event.inputs.environment == 'SCF-PROD' 
    environment:
      name: SCF-Prod-Plan
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Initiatives/Operations/${{ github.event.inputs.category }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=rg-poc-prod-01" -backend-config="storage_account_name=sttfiacpocprodeu201" -backend-config="container_name=poccontainer" -backend-config="key=${{ github.event.inputs.category }}.tfstate"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tf_plan
          echo "TF_PLAN_FILE=tf_plan" >> $GITHUB_ENV  # Set the TF_PLAN_FILE environment variable

  scf-prod-terraform-apply: 
    name: 'scf-prod-terraform-apply'
    needs: scf-prod-terraform-plan
    if: success('scf-prod-terraform-plan') && github.event.inputs.apply == 'true' && github.event.inputs.environment == 'SCF-PROD'
    environment:
      name: SCF-Prod-Apply
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: Initiatives/Operations/${{ github.event.inputs.category }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=rg-poc-prod-01" -backend-config="storage_account_name=sttfiacpocprodeu201" -backend-config="container_name=poccontainer" -backend-config="key=${{ github.event.inputs.category }}.tfstate"

      - name: Terraform Apply
        run: terraform apply ${{ env.TF_PLAN_FILE }} --auto-approve